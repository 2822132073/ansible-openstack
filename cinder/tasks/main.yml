---
# tasks file for cinder
- name: transfer repo file
  copy:
    src: "{{item}}"
    dest: "/etc/yum.repos.d/{{item}}.repo"
    backup: yes
  with_items:
    - dvd.repo
    - openstack-queens.repo

- name: set hosts file
  blockinfile:
    path: /etc/hosts
    block: |
      {{yum_ip}} yum.test.com
    marker: "#{mark} ansible yum.test.com  hosts"
    backup: yes
 

- name: Achieve admin data from host
  shell: |
      ifconfig |grep -B1 "{{admin_segment}}"|sed "s#inet##g"|tr -d " "|awk -F":|net" '{print $1}'
  register: results

- name: set admin ip and admin device
  set_fact:
    admin_ip: "{{results.stdout_lines[1]}}"
    admin_device: "{{results.stdout_lines[0]}}"

- name: Achieve public data from host
  shell: |
      ifconfig |grep -B1 "{{public_segment}}"|sed "s#inet##g"|tr -d " "|awk -F":|net" '{print $1}'
  register: results

- name: set public ip and public device
  set_fact:
    public_ip: "{{results.stdout_lines[1]}}"
    public_device: "{{results.stdout_lines[0]}}"

- name: Achieve storage data from host
  shell: |
      ifconfig |grep -B1 "{{public_segment}}"|sed "s#inet##g"|tr -d " "|awk -F":|net" '{print $1}'
  register: results

- name: set storage ip and storage device
  set_fact:
    storage_ip: "{{results.stdout_lines[1]}}"
    storage_device: "{{results.stdout_lines[0]}}"

- name: Install 
  yum: 
    name: "{{item}}"
    state: installed
  with_items:
    - lvm2 
    - device-mapper-persistent-data
    - openstack-cinder 
    - targetcli 
    - python-keystone 
    - python-openstackclient 
    - openstack-utils

- name: Config LVM
  blockinfile:
    path: /etc/lvm/lvm.conf
    marker: "#{mark} LVM config"
    insertafter: "^devices"
#想这个filter只允许用/sdb和/sda,想要用其它设备需要添加
    content: |
              filter = ["a/sda/", "a/sdb/", "r/.*/"]
    backup: yes

- name: Create VG
  lvg:
    vg: cinder-volumes
    pvs: /dev/sdb

- name: Start and enable soft
  systemd:
    name: lvm2-lvmetad.service
    state: started
    enabled: yes

- name: Create Keystone config shell script
  template:
    src: openstack_config_cinder.sh.j2
    dest: /tmp/openstack_config_cinder.sh
    mode: '700'
    backup: yes

- name: Execute keystone shell script
  shell: |
    /bin/bash /tmp/openstack_config_cinder.sh

- name: Start and enable openstack-cinder-volume.service target.service 
  systemd:
    name: "{{item}}"
    state: started
    enabled: yes
  with_items:
    - openstack-cinder-volume.service 
    - target.service 
