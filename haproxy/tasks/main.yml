---
# tasks file for haproxy
- name: Achieve admin data from host
  shell: |
      ifconfig |grep -B1 "{{admin_segment}}"|sed "s#inet##g"|tr -d " "|awk -F":|net" '{print $1}'
  register: results

- name: set admin ip and admin device
  set_fact:
    admin_ip: "{{results.stdout_lines[1]}}"
    admin_device: "{{results.stdout_lines[0]}}"

- name: Achieve public data from host
  shell: |
      ifconfig |grep -B1 "{{public_segment}}"|sed "s#inet##g"|tr -d " "|awk -F":|net" '{print $1}'
  register: results

- name: set public ip and public device
  set_fact:
    public_ip: "{{results.stdout_lines[1]}}"
    public_device: "{{results.stdout_lines[0]}}"

- name: Achieve storage data from host
  shell: |
      ifconfig |grep -B1 "{{storage_segment}}"|sed "s#inet##g"|tr -d " "|awk -F":|net" '{print $1}'
  register: results

- name: set storage ip and storage device
  set_fact:
    storage_ip: "{{results.stdout_lines[1]}}"
    storage_device: "{{results.stdout_lines[0]}}"

- name:  Create a new user with name
  mysql_user:
    login_user: "root"
    login_password: "{{mysql_password}}"
    name: "haproxy_check"
    priv: '*.*:process'
    host: "localhost"
  when: master == 1

- name:  Create a new user with localhost
  mysql_user:
    login_user: "root"                                             
    login_password: "{{mysql_password}}"                           
    name: "haproxy_check"                                          
    priv: '*.*:process'                                            
    host: "localhost"                                              
  when: master == 1

- name:  Create a new user with name
  mysql_user:
    login_user: "root" 
    login_password: "{{mysql_password}}"
    name: "haproxy_check"
    priv: '*.*:process'
    host: "{{hostvars[item].admin_ip}}"
  when: master == 1
  with_items:
    - "{{groups['controller']}}"

- name:  Create a new user with name                               
  mysql_user:
    login_user: "root"                                             
    login_password: "{{mysql_password}}"                           
    name: "haproxy_check"                                          
    priv: '*.*:process'                                            
    host: "{{hostvars[item].ansible_hostname}}"                                              
  when: master == 1
  with_items:
    - "{{groups['controller']}}"

- name: Install Haproxy
  yum:
    name: haproxy
    state: present

- name: Create config file
  template:
    src: haproxy.cfg.j2 
    dest: /etc/haproxy/haproxy.cfg
    backup: yes

- name: Start and enable haproxy
  systemd:
    name: haproxy
    state: started
    enabled: yes

- name: Restart haproxy
  service:
    name: haproxy
    state: restarted
